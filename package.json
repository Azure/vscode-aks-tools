{
    "name": "vscode-aks-tools",
    "displayName": "Azure Kubernetes Service",
    "description": "Display Azure Kubernetes Services within VS Code",
    "version": "1.3.13",
    "aiKey": "AIF-d9b70cd4-b9f9-4d70-929b-a071c400b217",
    "publisher": "ms-kubernetes-tools",
    "icon": "resources/aks-tools.png",
    "engines": {
        "vscode": "^1.73.0"
    },
    "capabilities": {
        "untrustedWorkspaces": {
            "supported": true
        },
        "virtualWorkspaces": true
    },
    "license": "MIT",
    "categories": [
        "Azure"
    ],
    "keywords": [
        "kubernetes",
        "azure",
        "aks",
        "acs",
        "kubernetes-extension-cloud-provider"
    ],
    "activationEvents": [
        "onView:kubernetes.cloudExplorer"
    ],
    "main": "./dist/extension",
    "contributes": {
        "walkthroughs": [
            {
                "id": "walkthrough",
                "title": "Welcome to AKS Extension",
                "description": "Azure Kubernetes Service (AKS) Extension for Visual Studio Code helps enable AKS developers with single click feature deployment within VS Code ecosystem.",
                "media": {
                    "image": "./docs/book/src/features/features.md",
                    "altText": "AKS Extension"
                },
                "steps": [
                    {
                        "id": "summarycommand",
                        "title": "All Features",
                        "description": "Once you successfully log in with your Azure Account, you can view all AKS clusters in your Azure subscriptions(s) under the section named **Azure**. You can right click on your AKS cluster and click a menu item to perform following actions.",
                        "media": {
                            "markdown": "./docs/book/src/features/features.md"
                        }
                    },
                    {
                        "id": "runcommand",
                        "title": "Cluster Operation Commands",
                        "description": "AKS Managed Cluster Operations supported by this extension, such as create cluster, delete, start or stop cluster from show properties page, rotate cluster certificate, etc.",
                        "media": {
                            "markdown": "./docs/book/src/features/manage-cluster-operations.md"
                        }
                    },
                    {
                        "id": "developercommand",
                        "title": "Developer Command",
                        "description": "This extension provides a set of commands to help developers to run kubectl commands against AKS clusters.",
                        "media": {
                            "markdown": "./docs/book/src/features/run-kubectl-command.md"
                        }
                    },
                    {
                        "id": "troubleshootingcommand",
                        "title": "Troubleshooting Command",
                        "description": "This extension provides a set of commands to help developers to troubleshoot AKS clusters such as quick run AKD Diagnostics using detectors, run AKS Periscope, run Inspektor Gadget, etc.",
                        "media": {
                            "markdown": "./docs/book/src/features/aks-periscope.md"
                        }
                    },
                    {
                        "id": "quickdeploymentcommand",
                        "title": "Quick deployments",
                        "description": "This extension also provides quick deployment features to help developers to quick deploy applications to AKS clusters such as inspektor gadget, azure service operator, etc.",
                        "media": {
                            "markdown": "./docs/book/src/features/install-azureserviceoperator.md"
                        }
                    }
                ]
            }
        ],
        "configuration": {
            "title": "AKS",
            "properties": {
                "aks.openai.apiKey": {
                    "type": "string",
                    "default": "",
                    "title": "Open AI API Key",
                    "description": "API Key from the OpenAI API keys profile."
                },
                "aks.periscope.repoOrg": {
                    "type": "string",
                    "default": "azure",
                    "title": "Periscope GitHub repository organization",
                    "description": "GitHub organization for the repository containing the Kustomize base template."
                },
                "aks.periscope.containerRegistry": {
                    "type": "string",
                    "default": "mcr.microsoft.com",
                    "title": "Periscope image container registry",
                    "description": "Container registry to pull Periscope images from."
                },
                "aks.periscope.releaseTag": {
                    "type": "string",
                    "default": "0.0.13",
                    "title": "Periscope repository release tag",
                    "description": "Release tag for the Kustomize templates in the Periscope repository."
                },
                "aks.periscope.imageVersion": {
                    "type": "string",
                    "default": "0.0.13",
                    "title": "Periscope image version",
                    "description": "Docker image tag corresponding to the Periscope version."
                },
                "azure.kubelogin.releaseTag": {
                    "type": "string",
                    "default": "v0.0.31",
                    "title": "Kubelogin repository release tag",
                    "description": "Release tag for the stable kubelogin tool release."
                },
                "azure.kubectlgadget.releaseTag": {
                    "type": "string",
                    "default": "v0.19.0",
                    "title": "Kubectl-gadget repository release tag",
                    "description": "Release tag for the stable kubectl-gadget tool."
                },
                "azure.customkubectl.commands": {
                    "type": "array",
                    "title": "Custom Kubectl commands",
                    "items": {
                        "type": "object",
                        "title": "A kubectl command",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Name for the command"
                            },
                            "command": {
                                "type": "string",
                                "description": "The command (minus 'kubectl' prefix)"
                            }
                        }
                    },
                    "default": [],
                    "description": "All the custom kubectl commands"
                }
            }
        },
        "commands": [
            {
                "command": "aks.selectSubscriptions",
                "title": "Select subscriptions...",
                "icon": {
                    "dark": "resources/dark/filter.svg",
                    "light": "resources/light/filter.svg"
                }
            },
            {
                "command": "aks.periscope",
                "title": "Run AKS Periscope"
            },
            {
                "command": "aks.installAzureServiceOperator",
                "title": "Install Azure Service Operator"
            },
            {
                "command": "aks.configureStarterWorkflow",
                "title": "Starter Workflow"
            },
            {
                "command": "aks.aksCRUDDiagnostics",
                "title": "Create, Upgrade, Delete and Scale"
            },
            {
                "command": "aks.aksCategoryConnectivity",
                "title": "Network Connectivity Issues"
            },
            {
                "command": "aks.aksBestPracticesDiagnostics",
                "title": "Best Practices"
            },
            {
                "command": "aks.aksIdentitySecurityDiagnostics",
                "title": "Identity and Security"
            },
            {
                "command": "aks.aksNodeHealthDiagnostics",
                "title": "Node Health"
            },
            {
                "command": "aks.aksKnownIssuesAvailabilityPerformanceDiagnostics",
                "title": "Known Issues, Availability and Performance"
            },
            {
                "command": "aks.configureHelmStarterWorkflow",
                "title": "Helm Workflow"
            },
            {
                "command": "aks.configureKomposeStarterWorkflow",
                "title": "Kompose Workflow"
            },
            {
                "command": "aks.configureKustomizeStarterWorkflow",
                "title": "Kustomize Workflow"
            },
            {
                "command": "aks.showInPortal",
                "title": "Show In Azure Portal"
            },
            {
                "command": "aks.clusterProperties",
                "title": "Show Properties"
            },
            {
                "command": "aks.createClusterNavToAzurePortal",
                "title": "Create Cluster From Azure Portal"
            },
            {
                "command": "aks.aksDeleteCluster",
                "title": "Delete Cluster"
            },
            {
                "command": "aks.aksRotateClusterCert",
                "title": "Rotate Cluster Certificate"
            },
            {
                "command": "aks.aksInspektorGadgetShow",
                "title": "Show Inspektor Gadget"
            },
            {
                "command": "aks.aksRunKubectlCommands",
                "title": "Run Kubectl Commands"
            },
            {
                "command": "aks.createCluster",
                "title": "Create Standard Cluster"
            }
        ],
        "menus": {
            "commandPalette": [
                {
                    "command": "aks.selectSubscriptions",
                    "when": "never"
                }
            ],
            "view/item/context": [
                {
                    "command": "aks.selectSubscriptions",
                    "when": "viewItem == aks.subscription",
                    "group": "inline"
                },
                {
                    "submenu": "aks.detectorsSubMenu",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i",
                    "group": "8@1"
                },
                {
                    "command": "aks.periscope",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i",
                    "group": "8@2"
                },
                {
                    "command": "aks.showInPortal",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i",
                    "group": "8@3"
                },
                {
                    "command": "aks.clusterProperties",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i",
                    "group": "8@3"
                },
                {
                    "command": "aks.installAzureServiceOperator",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i || view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.\\w*cluster$/i"
                },
                {
                    "submenu": "aks.ghWorkflowSubMenu",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i",
                    "group": "9@1"
                },
                {
                    "submenu": "aks.createClusterSubMenu",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.subscription/i"
                },
                {
                    "submenu": "aks.managedClusterOperationSubMenu",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i",
                    "group": "9@3"
                },
                {
                    "command": "aks.aksRunKubectlCommands",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i || view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.\\w*cluster$/i",
                    "group": "9@3"
                },
                {
                    "command": "aks.aksInspektorGadgetShow",
                    "when": "view == kubernetes.cloudExplorer && viewItem =~ /aks\\.cluster/i || view == extension.vsKubernetesExplorer && viewItem =~ /vsKubernetes\\.\\w*cluster$/i",
                    "group": "9@4"
                }
            ],
            "aks.createClusterSubMenu": [
                {
                    "command": "aks.createClusterNavToAzurePortal",
                    "group": "navigation"
                },
                {
                    "command": "aks.createCluster",
                    "group": "navigation"
                }
            ],
            "aks.detectorsSubMenu": [
                {
                    "command": "aks.aksCRUDDiagnostics",
                    "group": "navigation"
                },
                {
                    "command": "aks.aksBestPracticesDiagnostics",
                    "group": "navigation"
                },
                {
                    "command": "aks.aksIdentitySecurityDiagnostics",
                    "group": "navigation"
                },
                {
                    "command": "aks.aksNodeHealthDiagnostics",
                    "group": "navigation"
                },
                {
                    "command": "aks.aksKnownIssuesAvailabilityPerformanceDiagnostics",
                    "group": "navigation"
                },
                {
                    "command": "aks.aksCategoryConnectivity",
                    "group": "navigation"
                }
            ],
            "aks.ghWorkflowSubMenu": [
                {
                    "command": "aks.configureHelmStarterWorkflow",
                    "group": "navigation"
                },
                {
                    "command": "aks.configureKomposeStarterWorkflow",
                    "group": "navigation"
                },
                {
                    "command": "aks.configureKustomizeStarterWorkflow",
                    "group": "navigation"
                },
                {
                    "command": "aks.configureStarterWorkflow",
                    "group": "navigation"
                }
            ],
            "aks.managedClusterOperationSubMenu": [
                {
                    "command": "aks.aksDeleteCluster",
                    "group": "navigation"
                },
                {
                    "command": "aks.aksRotateClusterCert",
                    "group": "navigation"
                }
            ]
        },
        "submenus": [
            {
                "id": "aks.detectorsSubMenu",
                "label": "Run AKS Diagnostics"
            },
            {
                "id": "aks.ghWorkflowSubMenu",
                "label": "Create GitHub Workflow"
            },
            {
                "id": "aks.managedClusterOperationSubMenu",
                "label": "Managed Cluster Operations"
            },
            {
                "id": "aks.createClusterSubMenu",
                "label": "Create Cluster"
            }
        ]
    },
    "scripts": {
        "install:all": "npm install && cd webview-ui && npm install",
        "dev:webview": "cd webview-ui && npm run dev",
        "build:webview": "cd webview-ui && npm run build",
        "vscode:prepublish": "npm run webpack",
        "webpack": "npm run build:webview && webpack --mode production",
        "webpack-dev": "webpack --mode development --watch --info-verbosity verbose",
        "test-compile": "npm run build:webview && tsc -p ./",
        "watch": "tsc -watch -p ./",
        "test": "npm run test-compile && node ./out/tests/runTests.js"
    },
    "extensionDependencies": [
        "ms-vscode.azure-account",
        "ms-kubernetes-tools.vscode-kubernetes-tools"
    ],
    "devDependencies": {
        "@types/glob": "^7.1.4",
        "@types/js-yaml": "^3.12.1",
        "@types/mocha": "^2.2.48",
        "@types/node": "^16.11.7",
        "@types/semver": "^7.3.11",
        "@types/tmp": "^0.2.3",
        "@types/underscore": "^1.11.3",
        "@types/vscode": "^1.52.0",
        "chai": "^4.3.4",
        "eslint": "^8.27.0",
        "mocha": "^9.0.2",
        "sinon": "^12.0.1",
        "ts-loader": "^9.4.1",
        "typescript": "^4.9.5",
        "webpack": "^5.75.0",
        "webpack-cli": "^4.10.0"
    },
    "dependencies": {
        "@azure/arm-authorization": "^8.4.1",
        "@azure/arm-containerservice": "^17.2.0",
        "@azure/arm-monitor": "^6.0.0",
        "@azure/arm-resources": "^5.2.0",
        "@azure/arm-resources-subscriptions": "^2.0.1",
        "@azure/arm-storage": "^15.2.0",
        "@azure/arm-subscriptions": "^5.0.1",
        "@azure/identity": "^2.1.0",
        "@azure/ms-rest-azure-env": "^2.0.0",
        "@azure/msal-node": "^1.14.3",
        "@azure/storage-blob": "^12.7.0",
        "@microsoft/microsoft-graph-client": "^3.0.4",
        "@microsoft/vscode-azext-azureutils": "^0.3.1",
        "@microsoft/vscode-azext-utils": "^0.3.8",
        "@sinonjs/fake-timers": "^6.0.1",
        "@types/chai": "^4.2.21",
        "@types/sinon": "^10.0.6",
        "@types/sinonjs__fake-timers": "^6.0.2",
        "ajv": "^6.12.6",
        "cross-fetch": "^3.1.5",
        "decompress": "^4.2.1",
        "download": "^8.0.0",
        "electron": "^22.0.0",
        "filemanager-webpack-plugin": "^7.0.0-beta.0",
        "handlebars": "^4.7.7",
        "js-yaml": "^3.14.0",
        "move-file": "^3.0.0",
        "neverthrow": "^4.3.0",
        "openai": "^4.6.0",
        "rxjs": "^7.8.0",
        "semver": "^7.3.7",
        "sinon": "^12.0.1",
        "tmp": "^0.2.1",
        "tslib": "^2.1.0",
        "underscore": "^1.13.1",
        "util": "^0.12.3",
        "vscode-extension-telemetry": "^0.1.6",
        "vscode-kubernetes-tools-api": "^1.0.0",
        "vscode-test": "^1.5.2"
    },
    "repository": {
        "type": "git",
        "url": "https://github.com/Azure/vscode-aks-tools"
    }
}
